function Screen.init 0
push constant 0
not
pop static 0
push constant 16384
pop static 1
push constant 0
return
function Screen.clearScreen 2
push constant 0
pop local 0
push static 1
pop local 1
label WHILE_EXP0
push local 0
push constant 256
push constant 512
call Math.multiply 2
lt
not
if-goto WHILE_END0
push local 1
push static 1
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 16
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Screen.setColor 0
push argument 0
pop static 0
push constant 0
return
function Screen.mod 0
push argument 0
push argument 0
push argument 1
call Math.divide 2
push argument 1
call Math.multiply 2
sub
return
function Screen.pow 1
push argument 0
push constant 2
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 1
call Screen.twoToThe 1
return
label IF_FALSE0
push argument 1
push constant 0
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 1
return
label IF_FALSE1
push argument 1
push constant 1
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push argument 0
return
label IF_FALSE2
push constant 2
pop local 0
label WHILE_EXP0
push local 0
push argument 1
push constant 1
add
lt
not
if-goto WHILE_END0
push argument 0
push argument 0
call Math.multiply 2
pop argument 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push argument 0
return
function Screen.twoToThe 0
push argument 0
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 1
return
label IF_FALSE0
push argument 0
push constant 1
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 2
return
label IF_FALSE1
push argument 0
push constant 2
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 4
return
label IF_FALSE2
push argument 0
push constant 3
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push constant 8
return
label IF_FALSE3
push argument 0
push constant 4
eq
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push constant 16
return
label IF_FALSE4
push argument 0
push constant 5
eq
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push constant 32
return
label IF_FALSE5
push argument 0
push constant 6
eq
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push constant 64
return
label IF_FALSE6
push argument 0
push constant 7
eq
if-goto IF_TRUE7
goto IF_FALSE7
label IF_TRUE7
push constant 128
return
label IF_FALSE7
push argument 0
push constant 8
eq
if-goto IF_TRUE8
goto IF_FALSE8
label IF_TRUE8
push constant 256
return
label IF_FALSE8
push argument 0
push constant 9
eq
if-goto IF_TRUE9
goto IF_FALSE9
label IF_TRUE9
push constant 512
return
label IF_FALSE9
push argument 0
push constant 10
eq
if-goto IF_TRUE10
goto IF_FALSE10
label IF_TRUE10
push constant 1024
return
label IF_FALSE10
push argument 0
push constant 11
eq
if-goto IF_TRUE11
goto IF_FALSE11
label IF_TRUE11
push constant 2048
return
label IF_FALSE11
push argument 0
push constant 12
eq
if-goto IF_TRUE12
goto IF_FALSE12
label IF_TRUE12
push constant 4096
return
label IF_FALSE12
push argument 0
push constant 13
eq
if-goto IF_TRUE13
goto IF_FALSE13
label IF_TRUE13
push constant 8192
return
label IF_FALSE13
push argument 0
push constant 14
eq
if-goto IF_TRUE14
goto IF_FALSE14
label IF_TRUE14
push constant 16384
return
label IF_FALSE14
push argument 0
push constant 15
eq
if-goto IF_TRUE15
goto IF_FALSE15
label IF_TRUE15
push constant 16384
push constant 16384
add
return
label IF_FALSE15
push constant 0
return
function Screen.drawPixel 3
push constant 512
push constant 16
call Math.divide 2
push argument 1
call Math.multiply 2
push argument 0
push constant 16
call Math.divide 2
add
pop local 0
push argument 0
push constant 16
call Screen.mod 2
pop local 1
push constant 2
push local 1
call Screen.pow 2
pop local 2
push local 0
push static 1
add
push local 0
push static 1
add
pop pointer 1
push that 0
push local 2
call Screen.toColor 1
or
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
return
function Screen.drawLine 19
push argument 1
push argument 3
eq
push argument 0
push argument 2
eq
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 0
push argument 1
call Screen.drawPixel 2
pop temp 0
push constant 0
return
label IF_FALSE0
push argument 1
push argument 3
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push argument 0
push argument 2
call Math.min 2
pop local 0
push argument 0
push argument 2
call Math.max 2
pop local 1
push argument 1
push constant 32
call Math.multiply 2
push local 0
push constant 16
call Math.divide 2
add
pop local 5
push local 1
push local 0
sub
pop local 3
push local 0
push constant 16
call Screen.mod 2
pop local 4
push local 4
push constant 0
gt
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push local 3
push constant 16
push local 4
sub
lt
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push constant 2
push local 4
call Screen.pow 2
push constant 2
push local 3
call Screen.pow 2
push constant 1
sub
call Math.multiply 2
pop local 6
goto IF_END3
label IF_FALSE3
push constant 2
push constant 16
push local 4
sub
call Screen.pow 2
push constant 1
sub
push constant 2
push local 4
call Screen.pow 2
call Math.multiply 2
pop local 6
label IF_END3
push local 6
not
pop local 7
push local 5
push static 1
add
pop pointer 1
push that 0
push local 7
and
pop local 8
push local 5
push static 1
add
push local 6
call Screen.toColor 1
push local 8
or
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 5
push constant 1
add
pop local 5
push local 3
push constant 16
push local 4
sub
sub
pop local 3
label IF_FALSE2
label WHILE_EXP0
push local 3
push constant 15
gt
not
if-goto WHILE_END0
push local 5
push static 1
add
push constant 1
neg
call Screen.toColor 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 5
push constant 1
add
pop local 5
push local 3
push constant 16
sub
pop local 3
goto WHILE_EXP0
label WHILE_END0
push local 3
push constant 0
gt
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push constant 2
push local 3
call Screen.pow 2
push constant 1
sub
pop local 6
push local 6
not
pop local 7
push local 5
push static 1
add
pop pointer 1
push that 0
push local 7
and
pop local 8
push local 5
push static 1
add
push local 6
call Screen.toColor 1
push local 8
or
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE4
push constant 0
return
label IF_FALSE1
push argument 0
push argument 2
eq
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push argument 1
push argument 3
call Math.min 2
pop local 9
push argument 1
push argument 3
call Math.max 2
pop local 10
push local 9
pop local 11
label WHILE_EXP1
push local 11
push local 10
push constant 1
add
lt
not
if-goto WHILE_END1
push argument 0
push local 11
call Screen.drawPixel 2
pop temp 0
push local 11
push constant 1
add
pop local 11
goto WHILE_EXP1
label WHILE_END1
push constant 0
return
label IF_FALSE5
push argument 2
push argument 0
sub
call Math.abs 1
pop local 14
push argument 3
push argument 1
sub
call Math.abs 1
pop local 15
push argument 2
push argument 0
gt
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push constant 1
pop local 17
goto IF_END6
label IF_FALSE6
push constant 1
neg
pop local 17
label IF_END6
push argument 3
push argument 1
gt
if-goto IF_TRUE7
goto IF_FALSE7
label IF_TRUE7
push constant 1
pop local 18
goto IF_END7
label IF_FALSE7
push constant 1
neg
pop local 18
label IF_END7
push constant 0
pop local 12
push constant 0
pop local 13
push constant 0
pop local 16
label WHILE_EXP2
push local 12
push local 14
lt
push local 13
push local 15
lt
and
not
if-goto WHILE_END2
push argument 0
push local 12
push local 17
call Math.multiply 2
add
push argument 1
push local 13
push local 18
call Math.multiply 2
add
call Screen.drawPixel 2
pop temp 0
push local 16
push constant 0
lt
if-goto IF_TRUE8
goto IF_FALSE8
label IF_TRUE8
push local 12
push constant 1
add
pop local 12
push local 16
push local 15
add
pop local 16
goto IF_END8
label IF_FALSE8
push local 13
push constant 1
add
pop local 13
push local 16
push local 14
sub
pop local 16
label IF_END8
goto WHILE_EXP2
label WHILE_END2
push constant 0
return
function Screen.drawRectangle 0
label WHILE_EXP0
push argument 1
push argument 3
push constant 1
add
lt
not
if-goto WHILE_END0
push argument 0
push argument 1
push argument 2
push argument 1
call Screen.drawLine 4
pop temp 0
push argument 1
push constant 1
add
pop argument 1
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Screen.drawCircle 3
push argument 1
push argument 2
sub
pop local 0
label WHILE_EXP0
push local 0
push argument 1
push argument 2
add
push constant 1
add
lt
not
if-goto WHILE_END0
push argument 1
push local 0
sub
call Math.abs 1
pop local 1
push argument 2
push argument 2
call Math.multiply 2
push local 1
push local 1
call Math.multiply 2
sub
call Math.sqrt 1
pop local 2
push argument 0
push local 2
sub
push local 0
push argument 0
push local 2
add
push local 0
call Screen.drawLine 4
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Screen.toColor 0
push static 0
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 0
not
return
label IF_FALSE0
push argument 0
return
